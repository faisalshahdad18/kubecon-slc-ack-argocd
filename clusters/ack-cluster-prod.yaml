apiVersion: ec2.services.k8s.aws/v1alpha1
kind: VPC
metadata:
  namespace: team-prod
  name: prd-cluster-vpc
spec:
  cidrBlocks:
  - 192.168.0.0/16
  enableDNSSupport: true
  enableDNSHostnames: true
---
apiVersion: ec2.services.k8s.aws/v1alpha1
kind: ElasticIPAddress
metadata:
  namespace: team-prod
  name: prd-cluster-eip
spec: {}
---
apiVersion: ec2.services.k8s.aws/v1alpha1
kind: InternetGateway
metadata:
  namespace: team-prod
  name: prd-cluster-igw
spec:
  vpcRef:
    from:
      name: prd-cluster-vpc
---
apiVersion: ec2.services.k8s.aws/v1alpha1
kind: RouteTable
metadata:
  namespace: team-prod
  name: prd-cluster-public-route-table
spec:
  vpcRef:
    from:
      name: prd-cluster-vpc
  routes:
    - destinationCIDRBlock: 0.0.0.0/0
      gatewayRef:
        from:
          name: prd-cluster-igw
---
apiVersion: ec2.services.k8s.aws/v1alpha1
kind: Subnet
metadata:
  namespace: team-prod
  name: prd-cluster-public-subnet1
spec:
  availabilityZone: eu-west-1a
  cidrBlock: 192.168.0.0/18
  vpcRef:
    from:
      name: prd-cluster-vpc
  routeTableRefs:
  - from:
      name: prd-cluster-public-route-table
  mapPublicIPOnLaunch: true
---
apiVersion: ec2.services.k8s.aws/v1alpha1
kind: Subnet
metadata:
  namespace: team-prod
  name: prd-cluster-public-subnet2
spec:
  availabilityZone: eu-west-1b
  cidrBlock: 192.168.64.0/18
  vpcRef:
    from:
      name: prd-cluster-vpc
  routeTableRefs:
  - from:
      name: prd-cluster-public-route-table
  mapPublicIPOnLaunch: true
---
apiVersion: ec2.services.k8s.aws/v1alpha1
kind: NATGateway
metadata:
  namespace: team-prod
  name: prd-cluster-natgateway1
spec:
  subnetRef:
    from:
      name: prd-cluster-public-subnet2
  allocationRef:
    from:
      name: prd-cluster-eip
---
apiVersion: iam.services.k8s.aws/v1alpha1
kind: Role
metadata:
  namespace: team-prod
  name: prd-cluster-cluster-role
spec:
  name: prd-cluster-cluster-role
  description: "prod cluster cluster role"
  policies:
    - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
  assumeRolePolicyDocument: |
    {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Effect": "Allow",
          "Principal": {
            "Service": "eks.amazonaws.com"
          },
          "Action": "sts:AssumeRole"
        }
      ]
    }
---
apiVersion: iam.services.k8s.aws/v1alpha1
kind: Role
metadata:
  namespace: team-prod
  name: prd-cluster-node-role
spec:
  name: prd-cluster-node-role
  description: "prod cluster node role"
  policies:
    - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
    - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
    - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
  assumeRolePolicyDocument: |
    {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Effect": "Allow",
          "Principal": {
            "Service": "ec2.amazonaws.com"
          },
          "Action": "sts:AssumeRole"
        }
      ]
    }
---
apiVersion: iam.services.k8s.aws/v1alpha1
kind: Role
metadata:
  namespace: team-prod
  name: ack-admin-pia-role-prd
spec:
  name: ack-admin-pia-role-prd
  description: "prod cluster admin pia role"
  policies:
    - arn:aws:iam::aws:policy/AdministratorAccess
  assumeRolePolicyDocument: |
    {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Sid": "AllowEksAuthToAssumeRoleForPodIdentity",
                "Effect": "Allow",
                "Principal": {
                    "Service": "pods.eks.amazonaws.com"
                },
                "Action": [
                    "sts:AssumeRole",
                    "sts:TagSession"
                ]
            }
        ]
    }
---
apiVersion: eks.services.k8s.aws/v1alpha1
kind: Cluster
metadata:
  namespace: team-prod
  name: prd-cluster
spec:
  name: prd-cluster
  roleRef:
    from:
      name: prd-cluster-cluster-role
  version: "1.29"
  resourcesVPCConfig:
    endpointPrivateAccess: false
    endpointPublicAccess: true
    subnetRefs:
    - from:
        name: prd-cluster-public-subnet1
    - from:
        name: prd-cluster-public-subnet2
---
apiVersion: eks.services.k8s.aws/v1alpha1
kind: Nodegroup
metadata:
  namespace: team-prod
  name: prd-cluster-nodegroup
spec:
  name: prd-ng
  diskSize: 100
  clusterRef:
    from:
      name: prd-cluster
  subnetRefs:
  - from:
      name: prd-cluster-public-subnet1
  - from:
      name: prd-cluster-public-subnet2
  nodeRoleRef:
    from:
      name: prd-cluster-node-role
  updateConfig:
    maxUnavailable: 1
  scalingConfig:
    minSize: 1
    maxSize: 1
    desiredSize: 1 
